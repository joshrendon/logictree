# Generated from SystemVerilogSubset.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,268,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
        15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,
        21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,
        26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,
        28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,
        30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,
        33,1,33,4,33,221,8,33,11,33,12,33,222,1,34,1,34,5,34,227,8,34,10,
        34,12,34,230,9,34,1,35,4,35,233,8,35,11,35,12,35,234,1,36,4,36,238,
        8,36,11,36,12,36,239,1,36,1,36,1,37,1,37,1,37,1,37,5,37,248,8,37,
        10,37,12,37,251,9,37,1,37,1,37,1,38,1,38,1,38,1,38,5,38,259,8,38,
        10,38,12,38,262,9,38,1,38,1,38,1,38,1,38,1,38,1,260,0,39,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
        26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
        37,75,38,77,39,1,0,7,2,0,66,66,98,98,5,0,48,49,88,88,90,90,120,120,
        122,122,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,
        48,57,3,0,9,10,13,13,32,32,2,0,10,10,13,13,273,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,86,1,0,0,0,5,88,1,0,
        0,0,7,90,1,0,0,0,9,100,1,0,0,0,11,106,1,0,0,0,13,113,1,0,0,0,15,
        115,1,0,0,0,17,117,1,0,0,0,19,123,1,0,0,0,21,128,1,0,0,0,23,135,
        1,0,0,0,25,147,1,0,0,0,27,149,1,0,0,0,29,151,1,0,0,0,31,153,1,0,
        0,0,33,155,1,0,0,0,35,157,1,0,0,0,37,159,1,0,0,0,39,161,1,0,0,0,
        41,163,1,0,0,0,43,166,1,0,0,0,45,169,1,0,0,0,47,171,1,0,0,0,49,173,
        1,0,0,0,51,175,1,0,0,0,53,177,1,0,0,0,55,185,1,0,0,0,57,190,1,0,
        0,0,59,198,1,0,0,0,61,204,1,0,0,0,63,208,1,0,0,0,65,211,1,0,0,0,
        67,216,1,0,0,0,69,224,1,0,0,0,71,232,1,0,0,0,73,237,1,0,0,0,75,243,
        1,0,0,0,77,254,1,0,0,0,79,80,5,109,0,0,80,81,5,111,0,0,81,82,5,100,
        0,0,82,83,5,117,0,0,83,84,5,108,0,0,84,85,5,101,0,0,85,2,1,0,0,0,
        86,87,5,40,0,0,87,4,1,0,0,0,88,89,5,41,0,0,89,6,1,0,0,0,90,91,5,
        101,0,0,91,92,5,110,0,0,92,93,5,100,0,0,93,94,5,109,0,0,94,95,5,
        111,0,0,95,96,5,100,0,0,96,97,5,117,0,0,97,98,5,108,0,0,98,99,5,
        101,0,0,99,8,1,0,0,0,100,101,5,105,0,0,101,102,5,110,0,0,102,103,
        5,112,0,0,103,104,5,117,0,0,104,105,5,116,0,0,105,10,1,0,0,0,106,
        107,5,111,0,0,107,108,5,117,0,0,108,109,5,116,0,0,109,110,5,112,
        0,0,110,111,5,117,0,0,111,112,5,116,0,0,112,12,1,0,0,0,113,114,5,
        91,0,0,114,14,1,0,0,0,115,116,5,93,0,0,116,16,1,0,0,0,117,118,5,
        108,0,0,118,119,5,111,0,0,119,120,5,103,0,0,120,121,5,105,0,0,121,
        122,5,99,0,0,122,18,1,0,0,0,123,124,5,119,0,0,124,125,5,105,0,0,
        125,126,5,114,0,0,126,127,5,101,0,0,127,20,1,0,0,0,128,129,5,97,
        0,0,129,130,5,115,0,0,130,131,5,115,0,0,131,132,5,105,0,0,132,133,
        5,103,0,0,133,134,5,110,0,0,134,22,1,0,0,0,135,136,5,97,0,0,136,
        137,5,108,0,0,137,138,5,119,0,0,138,139,5,97,0,0,139,140,5,121,0,
        0,140,141,5,115,0,0,141,142,5,95,0,0,142,143,5,99,0,0,143,144,5,
        111,0,0,144,145,5,109,0,0,145,146,5,98,0,0,146,24,1,0,0,0,147,148,
        5,123,0,0,148,26,1,0,0,0,149,150,5,125,0,0,150,28,1,0,0,0,151,152,
        5,33,0,0,152,30,1,0,0,0,153,154,5,126,0,0,154,32,1,0,0,0,155,156,
        5,45,0,0,156,34,1,0,0,0,157,158,5,38,0,0,158,36,1,0,0,0,159,160,
        5,124,0,0,160,38,1,0,0,0,161,162,5,94,0,0,162,40,1,0,0,0,163,164,
        5,126,0,0,164,165,5,94,0,0,165,42,1,0,0,0,166,167,5,61,0,0,167,168,
        5,61,0,0,168,44,1,0,0,0,169,170,5,58,0,0,170,46,1,0,0,0,171,172,
        5,44,0,0,172,48,1,0,0,0,173,174,5,59,0,0,174,50,1,0,0,0,175,176,
        5,61,0,0,176,52,1,0,0,0,177,178,5,100,0,0,178,179,5,101,0,0,179,
        180,5,102,0,0,180,181,5,97,0,0,181,182,5,117,0,0,182,183,5,108,0,
        0,183,184,5,116,0,0,184,54,1,0,0,0,185,186,5,99,0,0,186,187,5,97,
        0,0,187,188,5,115,0,0,188,189,5,101,0,0,189,56,1,0,0,0,190,191,5,
        101,0,0,191,192,5,110,0,0,192,193,5,100,0,0,193,194,5,99,0,0,194,
        195,5,97,0,0,195,196,5,115,0,0,196,197,5,101,0,0,197,58,1,0,0,0,
        198,199,5,98,0,0,199,200,5,101,0,0,200,201,5,103,0,0,201,202,5,105,
        0,0,202,203,5,110,0,0,203,60,1,0,0,0,204,205,5,101,0,0,205,206,5,
        110,0,0,206,207,5,100,0,0,207,62,1,0,0,0,208,209,5,105,0,0,209,210,
        5,102,0,0,210,64,1,0,0,0,211,212,5,101,0,0,212,213,5,108,0,0,213,
        214,5,115,0,0,214,215,5,101,0,0,215,66,1,0,0,0,216,217,3,71,35,0,
        217,218,5,39,0,0,218,220,7,0,0,0,219,221,7,1,0,0,220,219,1,0,0,0,
        221,222,1,0,0,0,222,220,1,0,0,0,222,223,1,0,0,0,223,68,1,0,0,0,224,
        228,7,2,0,0,225,227,7,3,0,0,226,225,1,0,0,0,227,230,1,0,0,0,228,
        226,1,0,0,0,228,229,1,0,0,0,229,70,1,0,0,0,230,228,1,0,0,0,231,233,
        7,4,0,0,232,231,1,0,0,0,233,234,1,0,0,0,234,232,1,0,0,0,234,235,
        1,0,0,0,235,72,1,0,0,0,236,238,7,5,0,0,237,236,1,0,0,0,238,239,1,
        0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,241,1,0,0,0,241,242,6,
        36,0,0,242,74,1,0,0,0,243,244,5,47,0,0,244,245,5,47,0,0,245,249,
        1,0,0,0,246,248,8,6,0,0,247,246,1,0,0,0,248,251,1,0,0,0,249,247,
        1,0,0,0,249,250,1,0,0,0,250,252,1,0,0,0,251,249,1,0,0,0,252,253,
        6,37,0,0,253,76,1,0,0,0,254,255,5,47,0,0,255,256,5,42,0,0,256,260,
        1,0,0,0,257,259,9,0,0,0,258,257,1,0,0,0,259,262,1,0,0,0,260,261,
        1,0,0,0,260,258,1,0,0,0,261,263,1,0,0,0,262,260,1,0,0,0,263,264,
        5,42,0,0,264,265,5,47,0,0,265,266,1,0,0,0,266,267,6,38,0,0,267,78,
        1,0,0,0,7,0,222,228,234,239,249,260,1,6,0,0
    ]

class SystemVerilogSubsetLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    COLON = 23
    COMMA = 24
    SEMICOLON = 25
    ASSIGN = 26
    DEFAULT = 27
    CASE = 28
    ENDCASE = 29
    BEGIN = 30
    END = 31
    IF = 32
    ELSE = 33
    BinaryLiteral = 34
    Identifier = 35
    DecimalNumber = 36
    WS = 37
    LINE_COMMENT = 38
    BLOCK_COMMENT = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'module'", "'('", "')'", "'endmodule'", "'input'", "'output'", 
            "'['", "']'", "'logic'", "'wire'", "'assign'", "'always_comb'", 
            "'{'", "'}'", "'!'", "'~'", "'-'", "'&'", "'|'", "'^'", "'~^'", 
            "'=='", "':'", "','", "';'", "'='", "'default'", "'case'", "'endcase'", 
            "'begin'", "'end'", "'if'", "'else'" ]

    symbolicNames = [ "<INVALID>",
            "COLON", "COMMA", "SEMICOLON", "ASSIGN", "DEFAULT", "CASE", 
            "ENDCASE", "BEGIN", "END", "IF", "ELSE", "BinaryLiteral", "Identifier", 
            "DecimalNumber", "WS", "LINE_COMMENT", "BLOCK_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "COLON", "COMMA", "SEMICOLON", "ASSIGN", 
                  "DEFAULT", "CASE", "ENDCASE", "BEGIN", "END", "IF", "ELSE", 
                  "BinaryLiteral", "Identifier", "DecimalNumber", "WS", 
                  "LINE_COMMENT", "BLOCK_COMMENT" ]

    grammarFileName = "SystemVerilogSubset.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


